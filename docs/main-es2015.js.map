{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/page/dashboard/dashboard.component.ts","./src/app/components/page/dashboard/dashboard.component.html","./src/app/components/page/march/march-dashboard/march-dashboard.component.ts","./src/app/components/page/march/march-dashboard/march-dashboard.component.html","./src/app/components/page/march/march-settings/march-settings.component.ts","./src/app/components/page/march/march-settings/march-settings.component.html","./src/app/components/page/march/march.component.ts","./src/app/components/page/march/march.component.html","./src/app/components/page/march/march.module.ts","./src/app/services/march.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/page/dashboard/dashboard.component';\nimport { MarchComponent } from './components/page/march/march.component';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n  },\n  {\n    path: 'march',\n    component: MarchComponent\n  },\n  {\n    path: '**',\n    redirectTo: 'dashboard',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'KampSite';\n}\n","<div></div>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatToolbarModule } from '@angular/material/toolbar'; \nimport { MarchModule } from './components/page/march/march.module';\nimport { DashboardComponent } from './components/page/dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    MatToolbarModule,\n    MarchModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n  ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"dashboard-component-container\">\n    <h1>KodingKamp's Kampsite</h1>\n    <div>\n        <label>Below, you can find links to the 2022 monthly projects:</label>\n        <nav>\n            <ul>\n                <li>\n                    <a routerLink=\"/march\">March Project - 2022</a>\n                </li>\n            </ul>\n        </nav>\n        <label>* There will be a project to stylize this dashboard page to be more presentable and pleasant to views.</label>\n    </div>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MarchService } from 'src/app/services/march.service';\n\n@Component({\n  selector: 'app-march-dashboard',\n  templateUrl: './march-dashboard.component.html',\n  styleUrls: ['./march-dashboard.component.scss']\n})\nexport class MarchDashboardComponent implements OnInit {\n  @ViewChild('dashboardContainer') dashboardContainer;\n\n  // exposed variables\n  backgroundImageUrl = null;\n  isBackgroundLoaded = false;\n  searchInput = \"\";\n  \n  constructor(\n    private _marchService: MarchService,\n  ) {}\n\n  ngOnInit(): void {\n    this.getBackgroundImage();\n  }\n  \n  getBackgroundImage(): void {\n    this.backgroundImageUrl = localStorage.getItem('march-background-img-url');\n    this.isBackgroundLoaded = this.backgroundImageUrl !== null;\n  }\n\n  submitSearch(): void {\n    if (this.searchInput === \"\")\n      return;\n\n    this._marchService.submitSearch(this.searchInput);\n    this.searchInput = \"\";\n  }\n\n}\n","<div class=\"march-dashboard-component-container\"\n    [style.background-image]=\"'url(' + backgroundImageUrl + ')'\">\n    <mat-grid-list cols=\"1\" rowHeight=\"10%\" gutterSize=\"35%\">\n        <mat-grid-tile>\n            <div class=\"search-form-container\">\n                <mat-form-field appearance=\"fill\" class=\"search-bar-form-field\">\n                    <mat-label>Search</mat-label>\n                    <input matInput\n                        class=\"search-bar-input\"\n                        placeholder=\"Type something to search.\"\n                        [(ngModel)]=\"searchInput\"\n                        (keyup.enter)=\"submitSearch()\" />\n                </mat-form-field>\n            </div>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <h2 *ngIf=\"!isBackgroundLoaded\">\n                No saved background image found\n            </h2>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <h3 *ngIf=\"!isBackgroundLoaded\" class=\"scroll-message\">\n                Scroll down to view Picture of the Day\n            </h3>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NasaAPODResponse } from 'src/app/models/march/nasa-apodresponse';\nimport { MarchService } from 'src/app/services/march.service';\n\n@Component({\n  selector: 'app-march-settings',\n  templateUrl: './march-settings.component.html',\n  styleUrls: ['./march-settings.component.scss']\n})\nexport class MarchSettingsComponent implements OnInit {\n  @Output() changedSelectionEvent = new EventEmitter();\n\n  private _dates = [];\n  private _startDate;\n  private _endDate;\n  private _cacheKey = \"march-background-img-url\";\n\n  // exposed variabled\n  APODStatus: string = \"NotLoaded\";\n  APODList = [];\n  selectedDateData = null;\n\n  constructor(\n    private _marchService: MarchService,\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeDates();\n    this.getLast7DaysImages();\n  }\n\n  initializeDates(): void {\n    const dayInMilliseconds = 86400000;\n    let today = new Date();\n    today.setHours(0)\n    today.setMinutes(0)\n    today.setSeconds(0)\n    today.setMilliseconds(0)\n\n    this._endDate = this.convertToDateString(today);\n    this._startDate = this.convertToDateString(new Date(today.getTime() - (dayInMilliseconds * 6)));\n  }\n\n  getLast7DaysImages(): void {\n    this.APODStatus = \"Pending\";\n    this._marchService.getPicturesForLast7Days(this._startDate, this._endDate)\n      .subscribe((response) => {\n        let responseDTO = response.map(APOD => {\n          return {\n            ...APOD,\n            isImage: !APOD.url.includes('youtube.com')\n          }\n        });\n\n        let itemCount = responseDTO.length;\n        if (itemCount > 7)\n          responseDTO.shift();\n\n        this.selectedDateData = responseDTO[6];\n        this.APODList = responseDTO;\n        this.APODStatus = \"Loaded\";\n      },\n      (error) => {\n        this.APODStatus = \"Error\";\n      });\n  }\n\n  convertToDateString(date: Date): string {\n    const [\n      year, \n      month, \n      day\n    ] = [\n      date.getFullYear(), \n      date.getMonth(), \n      date.getDate()\n    ];\n    \n    return `${year}-${month}-${day}`;\n  }\n\n  selectedDay(dateData) {\n    this.selectedDateData = dateData;\n  }\n\n  saveSelected() {\n    if (this.selectedDateData.isImage) {\n      localStorage.setItem(this._cacheKey, this.selectedDateData.url);\n      this.changedSelectionEvent.emit();\n    }\n  }\n\n  clearSelected() {\n    localStorage.removeItem(this._cacheKey);\n    this.changedSelectionEvent.emit();\n  }\n}\n","<div class=\"march-settings-component-container\">\n    <div *ngIf=\"APODStatus === 'Loaded'\" class=\"status-loaded\">\n        <mat-grid-list cols=\"3\" rowHeight=\"33.33%\" class=\"outer-grid\">\n            \n            <mat-grid-tile class=\"inner-container container-top\" [colspan]=\"3\">\n                <mat-grid-list cols=\"7\" class=\"inner-grid\">\n                    <mat-grid-tile *ngFor=\"let Dayta of APODList\">\n                        <div class=\"image-container\"\n                            (click)=\"selectedDay(Dayta)\">\n                                <label class=\"date-label\">{{Dayta.date}}</label>\n                                <img class=\"thumbnail\"\n                                    src=\"{{Dayta.url}}\"\n                                    alt=\"{{Dayta.title}}\"\n                                    *ngIf=\"Dayta.isImage\">\n                                <label *ngIf=\"!Dayta.isImage\" class=\"no-image\">\n                                    No image for this day.<br>\n                                    Video is not yet supported.\n                                </label>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n            </mat-grid-tile>\n\n            <mat-grid-tile class=\"inner-container container-left\" [colspan]=\"2\" [rowspan]=\"2\">\n                <img src=\"{{selectedDateData.url}}\" *ngIf=\"selectedDateData.isImage\">\n                <label *ngIf=\"!selectedDateData.isImage\" class=\"no-image\">No image for this day. Video is not yet supported.</label>\n            </mat-grid-tile>\n\n            <mat-grid-tile class=\"inner-container container-right\" [rowspan]=\"2\">\n                <div class=\"info-container\">\n                    <h2>Information:</h2>\n                    <div>\n                        <p><label class=\"info-label\">Date:</label> {{selectedDateData.date}}</p>\n                        <p><label class=\"info-label\">Title:</label> {{selectedDateData.title}}</p>\n                        <p class=\"description\"><label class=\"info-label\">Description:</label> {{selectedDateData.explanation}}</p>\n                        <p><label class=\"info-label\">Author:</label> {{selectedDateData.copyright}}</p>\n                    </div>\n                    <div class=\"button-container\">\n                        <button mat-raised-button (click)=\"saveSelected()\" color=\"accent\" [disabled]=\"!selectedDateData.isImage\">Save as Background</button>\n                        <button mat-raised-button (click)=\"clearSelected()\">Clear Saved Background</button>\n                    </div>\n                </div>\n            </mat-grid-tile>\n\n        </mat-grid-list>\n    </div>\n    <div *ngIf=\"APODStatus === 'Pending'\" class=\"status-pending\">\n        <h2>Data is loading...</h2>\n    </div>\n    <div *ngIf=\"APODStatus === 'Not Loaded'\" class=\"status-not-loaded\">\n        <h2>Data not loaded.</h2>\n    </div>\n    <div *ngIf=\"APODStatus === 'Error'\" class=\"status-not-loaded\">\n        <h2>Error loading data.</h2>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { environment } from 'src/environments/environment'; \nimport { MarchDashboardComponent } from './march-dashboard/march-dashboard.component';\n\n@Component({\n  selector: 'app-march',\n  templateUrl: './march.component.html',\n  styleUrls: ['./march.component.scss']\n})\nexport class MarchComponent implements OnInit {\n\n  private readonly APIKEY = environment.NasaApiKey;\n  \n  @ViewChild(MarchDashboardComponent) dashboardChild: MarchDashboardComponent;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  handleSelectionChanged(){\n    this.dashboardChild.getBackgroundImage();\n  }\n}\n","<div class=\"march-component-container\">\n    <app-march-dashboard></app-march-dashboard>\n    <app-march-settings (changedSelectionEvent)=\"handleSelectionChanged()\"></app-march-settings>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common'; \nimport { HttpClientModule } from '@angular/common/http';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule } from \"@angular/forms\";\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatFormFieldModule } from '@angular/material/form-field'; \nimport { MatInputModule } from '@angular/material/input';\n\nimport { MarchComponent } from './march.component';\nimport { MarchDashboardComponent } from './march-dashboard/march-dashboard.component';\nimport { MarchSettingsComponent } from './march-settings/march-settings.component';\n\n@NgModule({\n  declarations: [\n    MarchComponent,\n    MarchDashboardComponent,\n    MarchSettingsComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    HttpClientModule,\n  ]\n})\nexport class MarchModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { NasaAPODResponse } from '../models/march/nasa-apodresponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarchService {\n  private readonly searchUrl = \"https://www.google.com/search\";\n  private readonly nasaAPODUrl = \"https://api.nasa.gov/planetary/apod\";\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  submitSearch(searchInput: string): void {\n    let searchQuery = `${this.searchUrl}?q=${searchInput}`;\n    location.href = searchQuery;\n  }\n\n  getPictureOfTheDay(): Observable<NasaAPODResponse> {\n    let query = this.nasaAPODUrl + environment.NasaApiKey;\n    return this.http.get<NasaAPODResponse>(query);\n  }\n\n  getPicturesForLast7Days(startDate: string, endDate: string): Observable<NasaAPODResponse[]> {\n    let query = `${this.nasaAPODUrl}?api_key=${environment.NasaApiKey}&start_date=${startDate}&end_date=${endDate}`;\n    \n      return this.http.get<NasaAPODResponse[]>(query);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  NasaApiKey: 'RvkEfKwbp896p4xWicQfFaSGg3i1tqxbA5Ud6u9k'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}